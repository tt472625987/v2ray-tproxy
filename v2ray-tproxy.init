#!/bin/sh /etc/rc.common
START=95  # 在网络初始化后执行
USE_PROCD=0  # 禁用 procd 管理

# 新增状态检测函数
status() {
    # 加载配置文件获取变量
    [ -f "/home/v2ray-tproxy/config.conf" ] && . /home/v2ray-tproxy/config.conf || {
        echo "Config file missing"
        return 1
    }

    # 检查核心组件
    local checks=(
        "iptables规则链" "iptables -t mangle -L V2RAY -n >/dev/null 2>&1"
        "TPROXY端口监听" "[ -n '$TPROXY_PORT' ] && ss -ulnp | grep -q ':$TPROXY_PORT'"
        "路由规则" "[ -n '$FW_MARK' ] && [ -n '$ROUTE_TABLE' ] && ip rule show | grep -q 'fwmark $FW_MARK' && ip route show table $ROUTE_TABLE | grep -q 'dev lo'"
    )
    
    local checks_passed=0
    local total_checks=$((${#checks[@]}/2))
    local traffic_stats=""
    
    # 获取流量统计（如果规则存在）
    if iptables -t mangle -L V2RAY -n >/dev/null 2>&1; then
        traffic_stats=$(iptables -t mangle -L V2RAY -nvx | awk '
            /^Chain V2RAY/ {chain=1; next}
            chain && /TPROXY/ {printf "↑%s包/%sB ↓", $2, $3; exit}
            chain && /socket/ {socket=$2}
            END {if (chain) printf " (Socket分流: %s包)", socket}'
        )
    fi

    # 执行检查
    echo "=== 服务状态检查 ==="
    for ((i=0; i<${#checks[@]}; i+=2)); do
        local desc="${checks[i]}"
        local cmd="${checks[i+1]}"
        
        if eval "$cmd"; then
            echo -e "[✓] $desc"
            checks_passed=$((checks_passed+1))
        else
            echo -e "[×] $desc"
        fi
    done

    # 显示综合状态
    echo -e "\n=== 综合状态 ==="
    if [ $checks_passed -eq $total_checks ]; then
        echo -e "${GREEN}运行正常${NC} (所有 $total_checks 项检查通过)"
        [ -n "$traffic_stats" ] && echo -e "流量统计: $traffic_stats"
        return 0
    elif [ $checks_passed -gt 0 ]; then
        echo -e "${YELLOW}部分运行${NC} ($checks_passed/$total_checks 项检查通过)"
        [ -n "$traffic_stats" ] && echo -e "流量统计: $traffic_stats"
        return 2
    else
        echo -e "${RED}未运行${NC}"
        return 1
    fi
}

start() {
    # 加载配置
    . /home/v2ray-tproxy/config.conf || {
        logger -t v2ray-tproxy "错误：无法加载配置文件"
        exit 1
    }


    # 等待网络就绪（改进版）
    echo "[v2ray-tproxy] 等待网络就绪..."
    local max_retry=10
    while [ $max_retry -gt 0 ]; do
        if ping -c1 -W2 "$TEST_IP" >/dev/null 2>&1; then
            break
        fi
        sleep 3
        max_retry=$((max_retry-1))
    done
    [ $max_retry -le 0 ] && logger -t v2ray-tproxy "警告：网络检测超时"

    # 按顺序加载规则
    for rule in /home/v2ray-tproxy/rules.d/*.conf; do
        if [ -f "$rule" ]; then
            echo "[v2ray-tproxy] 加载规则: $(basename "$rule")"
            sh "$rule" || logger -t v2ray-tproxy "规则加载失败: $(basename "$rule")"
        fi
    done

    logger -t v2ray-tproxy "启动完成 (Mark: ${MARK_VALUE:-未设置})"
}

stop() {
    # 清理规则
    [ -f "/home/v2ray-tproxy/rules.d/10-cleanup.conf" ] && {
        sh /home/v2ray-tproxy/rules.d/10-cleanup.conf
        logger -t v2ray-tproxy "规则已清除"
    } || logger -t v2ray-tproxy "错误：清理脚本不存在"
}