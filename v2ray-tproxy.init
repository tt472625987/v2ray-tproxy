#!/bin/sh /etc/rc.common
START=95  # 在网络初始化后执行
USE_PROCD=0  # 禁用 procd 管理

# 定义颜色（兼容ash）
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

# 新增状态检测函数（兼容ash语法）
status() {
    # 加载配置文件获取变量
    [ -f "/home/v2ray-tproxy/config.conf" ] && . /home/v2ray-tproxy/config.conf || {
        echo "Config file missing"
        return 1
    }

    # 初始化检查结果
    local rules_ok=0 port_ok=0 route_ok=0
    local traffic_stats=""

    # 1. 检查iptables规则链
    if iptables -t mangle -L V2RAY -n >/dev/null 2>&1; then
        rules_ok=1
        # 获取流量统计
        traffic_stats=$(iptables -t mangle -L V2RAY -nvx | awk '
            /^Chain V2RAY/ {chain=1; next}
            chain && /TPROXY/ {printf "↑%s包/%sB ↓", $2, $3; exit}
            chain && /socket/ {socket=$2}
            END {if (chain) printf " (Socket分流: %s包)", socket}'
        )
    fi

    # 2. 检查TPROXY端口监听
    if [ -n "$TPROXY_PORT" ]; then
        if ss -ulnp | grep -q ":$TPROXY_PORT"; then
            port_ok=1
        fi
    fi

    # 3. 检查路由规则
    if [ -n "$FW_MARK" ] && [ -n "$ROUTE_TABLE" ]; then
        if ip rule show | grep -q "fwmark $FW_MARK" && \
           ip route show table $ROUTE_TABLE | grep -q "dev lo"; then
            route_ok=1
        fi
    fi

    # 显示检查结果
    echo "=== 服务状态检查 ==="
    [ $rules_ok -eq 1 ] && echo "[✓] iptables规则链" || echo "[×] iptables规则链"
    if [ -n "$TPROXY_PORT" ]; then
        [ $port_ok -eq 1 ] && echo "[✓] TPROXY端口 $TPROXY_PORT 监听" || echo "[×] TPROXY端口 $TPROXY_PORT 未监听"
    else
        echo "[!] 配置中未定义TPROXY_PORT"
    fi
    if [ -n "$FW_MARK" ] && [ -n "$ROUTE_TABLE" ]; then
        [ $route_ok -eq 1 ] && echo "[✓] 路由规则(fwmark $FW_MARK -> table $ROUTE_TABLE)" || echo "[×] 路由规则缺失"
    else
        echo "[!] 配置中未定义FW_MARK或ROUTE_TABLE"
    fi

    # 综合状态判断
    echo -e "\n=== 综合状态 ==="
    if [ $rules_ok -eq 1 ] && [ $port_ok -eq 1 ] && [ $route_ok -eq 1 ]; then
        echo -e "${GREEN}运行正常${NC} (所有检查通过)"
        [ -n "$traffic_stats" ] && echo -e "流量统计: $traffic_stats"
        return 0
    elif [ $rules_ok -eq 1 ] || [ $port_ok -eq 1 ] || [ $route_ok -eq 1 ]; then
        echo -e "${YELLOW}部分运行${NC}"
        [ -n "$traffic_stats" ] && echo -e "流量统计: $traffic_stats"
        return 2
    else
        echo -e "${RED}未运行${NC}"
        return 1
    fi
}

start() {
    # 加载配置
    . /home/v2ray-tproxy/config.conf || {
        logger -t v2ray-tproxy "错误：无法加载配置文件"
        exit 1
    }

    # 等待网络就绪
    echo "[v2ray-tproxy] 等待网络就绪..."
    local max_retry=10
    while [ $max_retry -gt 0 ]; do
        if ping -c1 -W2 "$TEST_IP" >/dev/null 2>&1; then
            break
        fi
        sleep 3
        max_retry=$((max_retry-1))
    done
    [ $max_retry -le 0 ] && logger -t v2ray-tproxy "警告：网络检测超时"

    # 按顺序加载规则
    for rule in /home/v2ray-tproxy/rules.d/*.conf; do
        if [ -f "$rule" ]; then
            echo "[v2ray-tproxy] 加载规则: $(basename "$rule")"
            sh "$rule" || logger -t v2ray-tproxy "规则加载失败: $(basename "$rule")"
        fi
    done

    logger -t v2ray-tproxy "启动完成 (Mark: ${MARK_VALUE:-未设置})"
}

stop() {
    # 清理规则
    [ -f "/home/v2ray-tproxy/rules.d/10-cleanup.conf" ] && {
        sh /home/v2ray-tproxy/rules.d/10-cleanup.conf
        logger -t v2ray-tproxy "规则已清除"
    } || logger -t v2ray-tproxy "错误：清理脚本不存在"
}